generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid()) @map("id")
  name String
  image String?
  email String? @unique
  emailVerified DateTime?
  hashedPassword String? @db.VarChar
  createdAt DateTime @default(now()) @db.Timestamp
  updateAt DateTime @updatedAt @db.Timestamp
  sessions Session[]
  accounts Account[]
}

model Account {
  id String @id @default(uuid()) @map("id")
  userId String @map("user_id")
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.Text
  access_token String? @db.Text
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.Text
  session_state String? @db.Text
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id String @id @default(uuid()) @map("id")
  sessionToken String @unique
  userId String @map("user_id")
  expires DateTime  @db.Timestamp
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id String @id @default(uuid()) @map("id")
  identifier String
  token String @unique
  expires DateTime  @db.Timestamp
  @@unique([identifier, token])
}