name: Main Branch Maven and Jest Workflow

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [17]
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ matrix.java-version }}
          cache: "maven"

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - run: yarn install --cwd=frontend --frozen-lockfile

      - name: Generate Keys
        run: |
          mkdir -p backend/src/main/resources/certs
          openssl genrsa -out backend/src/main/resources/certs/keypair.pem 2048
          openssl rsa -in backend/src/main/resources/certs/keypair.pem -pubout -out backend/src/main/resources/certs/public.pem
          openssl pkcs8 -topk8 -inform PEM -outform PEM -nocrypt -in backend/src/main/resources/certs/keypair.pem -out backend/src/main/resources/certs/private.pem

      - name: Tests with Jest
        run: yarn jest --cwd=frontend

      - name: Tests with Maven
        run: mvn -f backend -B test --file pom.xml

  build:
    needs: test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [17]
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ matrix.java-version }}
          cache: "maven"

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - run: yarn install --cwd=frontend --frozen-lockfile

      - name: Generate Keys
        run: |
          mkdir -p backend/src/main/resources/certs
          openssl genrsa -out backend/src/main/resources/certs/keypair.pem 2048
          openssl rsa -in backend/src/main/resources/certs/keypair.pem -pubout -out backend/src/main/resources/certs/public.pem
          openssl pkcs8 -topk8 -inform PEM -outform PEM -nocrypt -in backend/src/main/resources/certs/keypair.pem -out backend/src/main/resources/certs/private.pem

      - name: Build with Jest
        run: yarn build --cwd=frontend

      - name: Build with Maven
        run: mvn -B package --file pom.xml
